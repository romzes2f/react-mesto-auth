{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._token = options.headers.authorization;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._getResponseData);\n  }\n  setInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.job,\n        avatar: data.avatar\n      })\n    }).then(this._getResponseData);\n  }\n  setAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponseData);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._getResponseData);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      })\n    }).then(this._getResponseData);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._getResponseData);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._getResponseData);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._getResponseData);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"ec6eb6f6-d349-455a-a729-a5d95d863e29\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_token","authorization","_getResponseData","res","ok","Promise","reject","status","json","getInfo","fetch","method","then","setInfo","data","body","JSON","stringify","name","about","job","avatar","setAvatar","getCards","addCard","title","link","deleteCard","cardId","addLike","deleteLike","api"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._token = options.headers.authorization;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._getResponseData);\n  }\n  setInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.job,\n        avatar: data.avatar,\n      }),\n    }).then(this._getResponseData);\n  }\n  setAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._getResponseData);\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._getResponseData);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    }).then(this._getResponseData);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._getResponseData);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._getResponseData);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._getResponseData);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"ec6eb6f6-d349-455a-a729-a5d95d863e29\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}