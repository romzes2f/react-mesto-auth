{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._getResponseData);\n  }\n  getInitialCards() {\n    return this._request(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    });\n  }\n  getUserInfo() {\n    return this._request(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    });\n  }\n  changeUserInfo(name, about) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n  }\n  addNewCard(title, link) {\n    return this._request(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._request(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  addLike(cardId) {\n    return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    });\n  }\n  deleteLike(cardId) {\n    return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  changeUserAvatar(link) {\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n  }\n}\nexport default Api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: 'f9a58eab-d2de-4166-9a66-6bc6595d2d82',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponseData","res","ok","Promise","reject","status","json","_request","url","fetch","then","getInitialCards","getUserInfo","changeUserInfo","name","about","method","body","JSON","stringify","addNewCard","title","link","deleteCard","cardId","addLike","deleteLike","changeUserAvatar","avatar","authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n      }\n\n    _getResponseData(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка: ${res.status}`); \n        }\n        return res.json();\n    } \n\n    _request(url, options) {\n        return fetch(url, options).then(this._getResponseData);\n    }\n    \n    \n    getInitialCards() {\n        return this._request(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n    }\n\n    getUserInfo() {\n        return this._request(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n    }\n\n    changeUserInfo(name, about) {\n        return this._request(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        })\n    }\n\n    addNewCard(title, link) {\n        return this._request(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: title, \n                link: link\n            })\n        })\n        }\n    \n    deleteCard(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n    }\n\n    addLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n    }\n\n    deleteLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n    }\n\n    changeUserAvatar(link) {\n        return this._request(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: link\n            })\n        })\n    }\n}\n\nexport default Api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n    headers: {\n        authorization: 'f9a58eab-d2de-4166-9a66-6bc6595d2d82',\n        'Content-Type': 'application/json'\n    }\n});"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEFC,gBAAgBA,CAACC,GAAG,EAAE;IAClB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,GAAG,CAACI,MAAO,EAAC,CAAC;IAClD;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACrB;EAEAC,QAAQA,CAACC,GAAG,EAAEb,OAAO,EAAE;IACnB,OAAOc,KAAK,CAACD,GAAG,EAAEb,OAAO,CAAC,CAACe,IAAI,CAAC,IAAI,CAACV,gBAAgB,CAAC;EAC1D;EAGAW,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAACJ,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,QAAO,EAAE;MAC3CG,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC;EACN;EAEAc,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACL,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,WAAU,EAAE;MAC9CG,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC;EACN;EAEAe,cAAcA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACxB,OAAO,IAAI,CAACR,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,WAAU,EAAE;MAC9CoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA;MACX,CAAC;IACL,CAAC,CAAC;EACN;EAEAK,UAAUA,CAACC,KAAK,EAAEC,IAAI,EAAE;IACpB,OAAO,IAAI,CAACf,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,QAAO,EAAE;MAC3CoB,MAAM,EAAE,MAAM;MACdjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI,EAAEO,KAAK;QACXC,IAAI,EAAEA;MACV,CAAC;IACL,CAAC,CAAC;EACF;EAEJC,UAAUA,CAACC,MAAM,EAAE;IACf,OAAO,IAAI,CAACjB,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,UAAS4B,MAAO,EAAC,EAAE;MACrDR,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC;EACN;EAEA2B,OAAOA,CAACD,MAAM,EAAE;IACZ,OAAO,IAAI,CAACjB,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,UAAS4B,MAAO,QAAO,EAAE;MAC3DR,MAAM,EAAE,KAAK;MACbjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC;EACN;EAEA4B,UAAUA,CAACF,MAAM,EAAE;IACf,OAAO,IAAI,CAACjB,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,UAAS4B,MAAO,QAAO,EAAE;MAC3DR,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC;EACN;EAEA6B,gBAAgBA,CAACL,IAAI,EAAE;IACnB,OAAO,IAAI,CAACf,QAAQ,CAAE,GAAE,IAAI,CAACX,QAAS,kBAAiB,EAAE;MACrDoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBS,MAAM,EAAEN;MACZ,CAAC;IACL,CAAC,CAAC;EACN;AACJ;AAEA,eAAe7B,GAAG,GAAG,IAAIA,GAAG,CAAC;EACzBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACL8B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}