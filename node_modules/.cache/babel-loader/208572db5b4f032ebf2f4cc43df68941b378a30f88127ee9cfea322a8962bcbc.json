{"ast":null,"code":"import _defineProperty from\"/Users/roman/Documents/\\u042F.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Projects/mesto-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/roman/Documents/\\u042F.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Projects/mesto-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/roman/Documents/\\u042F.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Projects/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useState}from\"react\";export default function useFormValidation(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),inputValid=_useState8[0],setImputValid=_useState8[1];function handleChange(event){var name=event.target.name;var value=event.target.value;var validationText=event.target.validationMessage;var valid=event.target.validity.valid;var form=event.target.form;setValues(function(element){return _objectSpread(_objectSpread({},element),{},_defineProperty({},name,value));});setError(function(element){return _objectSpread(_objectSpread({},element),{},_defineProperty({},name,validationText));});setIsValid(function(element){return _objectSpread(_objectSpread({},element),{},_defineProperty({},name,valid));});setImputValid(form.checkValidity());}function reset(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setValues(data);setError({});setIsValid(false);setImputValid({});}var setValue=useCallback(function(name,value){setValues(function(element){return _objectSpread(_objectSpread({},element),{},_defineProperty({},name,value));});},[]);return{values:values,error:error,isValid:isValid,inputValid:inputValid,handleChange:handleChange,reset:reset,setValue:setValue};}","map":{"version":3,"names":["useCallback","useState","useFormValidation","_useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","error","setError","_useState5","_useState6","isValid","setIsValid","_useState7","_useState8","inputValid","setImputValid","handleChange","event","name","target","value","validationText","validationMessage","valid","validity","form","element","_objectSpread","_defineProperty","checkValidity","reset","data","arguments","length","undefined","setValue"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/hooks/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\n\nexport default function useFormValidation() {\n  const [values, setValues] = useState({})\n  const [error, setError] = useState({})\n  const [isValid, setIsValid] = useState(false)\n  const [inputValid, setImputValid] = useState({})\n\n  function handleChange(event) {\n\n    const name = event.target.name;\n    const value = event.target.value;\n    const validationText = event.target.validationMessage;\n    const valid = event.target.validity.valid;\n    const form = event.target.form;\n\n\n    setValues((element) => {\n      return { ...element, [name]: value };\n    });\n\n    setError((element) => {\n      return { ...element, [name]: validationText };\n    });\n\n    setIsValid((element) => {\n      return { ...element, [name]: valid };\n    });\n\n    setImputValid(form.checkValidity());\n  }\n\n  function reset(data = {}) {\n    setValues(data)\n    setError({})\n    setIsValid(false)\n    setImputValid({})\n  }\n\n  const setValue = useCallback((name, value) => {\n    setValues((element) => {\n      return { ...element, [name]: value };\n    })\n  }, [])\n\n  return { values, error, isValid, inputValid, handleChange, reset, setValue };\n}\n"],"mappings":"8jBAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAG7C,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,IAAAC,SAAA,CAA4BF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAA0BP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAQ,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAA8BX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAoCf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAgB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAzCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,QAAS,CAAAG,YAAYA,CAACC,KAAK,CAAE,CAE3B,GAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACD,IAAI,CAC9B,GAAM,CAAAE,KAAK,CAAGH,KAAK,CAACE,MAAM,CAACC,KAAK,CAChC,GAAM,CAAAC,cAAc,CAAGJ,KAAK,CAACE,MAAM,CAACG,iBAAiB,CACrD,GAAM,CAAAC,KAAK,CAAGN,KAAK,CAACE,MAAM,CAACK,QAAQ,CAACD,KAAK,CACzC,GAAM,CAAAE,IAAI,CAAGR,KAAK,CAACE,MAAM,CAACM,IAAI,CAG9BtB,SAAS,CAAC,SAACuB,OAAO,CAAK,CACrB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,OAAO,KAAAE,eAAA,IAAGV,IAAI,CAAGE,KAAK,GACpC,CAAC,CAAC,CAEFb,QAAQ,CAAC,SAACmB,OAAO,CAAK,CACpB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,OAAO,KAAAE,eAAA,IAAGV,IAAI,CAAGG,cAAc,GAC7C,CAAC,CAAC,CAEFV,UAAU,CAAC,SAACe,OAAO,CAAK,CACtB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,OAAO,KAAAE,eAAA,IAAGV,IAAI,CAAGK,KAAK,GACpC,CAAC,CAAC,CAEFR,aAAa,CAACU,IAAI,CAACI,aAAa,CAAC,CAAC,CAAC,CACrC,CAEA,QAAS,CAAAC,KAAKA,CAAA,CAAY,IAAX,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtB7B,SAAS,CAAC4B,IAAI,CAAC,CACfxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACZI,UAAU,CAAC,KAAK,CAAC,CACjBI,aAAa,CAAC,CAAC,CAAC,CAAC,CACnB,CAEA,GAAM,CAAAoB,QAAQ,CAAGvC,WAAW,CAAC,SAACsB,IAAI,CAAEE,KAAK,CAAK,CAC5CjB,SAAS,CAAC,SAACuB,OAAO,CAAK,CACrB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,OAAO,KAAAE,eAAA,IAAGV,IAAI,CAAGE,KAAK,GACpC,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAElB,MAAM,CAANA,MAAM,CAAEI,KAAK,CAALA,KAAK,CAAEI,OAAO,CAAPA,OAAO,CAAEI,UAAU,CAAVA,UAAU,CAAEE,YAAY,CAAZA,YAAY,CAAEc,KAAK,CAALA,KAAK,CAAEK,QAAQ,CAARA,QAAS,CAAC,CAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}