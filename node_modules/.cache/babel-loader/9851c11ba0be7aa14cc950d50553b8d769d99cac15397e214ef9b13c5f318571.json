{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Documents/\\u042F.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Projects/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport PopupConfirmation from \"./PopupConfirmation\";\nimport ImagePopup from \"./ImagePopup\";\nimport Footer from \"./Footer\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedCard, setDeletedCard] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  useEffect(() => {\n    api.getUserInfo().then(profile => setCurrentUser(profile)).catch(error => console.log(`Ошибка: ${error}`));\n    api.getInitialCards().then(data => {\n      setCards(data.map(card => ({\n        _id: card._id,\n        name: card.name,\n        link: card.link,\n        likes: card.likes,\n        owner: card.owner\n      })));\n    }).catch(error => console.log(`Ошибка: ${error}`));\n  }, []);\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isConfirmationPopupOpen || selectedCard.link;\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => {\n        document.removeEventListener(\"keydown\", closeByEscape);\n      };\n    }\n  }, [isOpen]);\n  function closeByOverlay(evt) {\n    if (evt.target === evt.currentTarget) {\n      closeAllPopups();\n    }\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setDeletedCard({});\n  }\n  function changeAddPlaceSubmit(data) {\n    setIsLoading(true);\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(error => console.log(`Ошибка: ${error}`)).finally(() => setIsLoading(false));\n  }\n  function changeUpdateUser(newUserInfo) {\n    setIsLoading(true);\n    api.editUserInfo(newUserInfo).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(error => console.log(`Ошибка: ${error}`)).finally(() => setIsLoading(false));\n  }\n  function changeUpdateAvatar(newAvatar) {\n    setIsLoading(true);\n    api.editUserPhoto(newAvatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(error => console.log(`Ошибка: ${error}`)).finally(() => setIsLoading(false));\n  }\n  function changeCardLike(card) {\n    const isLiked = card.likes.some(user => user._id === currentUser._id);\n    if (isLiked) {\n      api.dislikeCard(card._id).then(newCard => setCards(state => state.map(item => item._id === card._id ? newCard : item))).catch(error => console.log(`Ошибка: ${error}`));\n    } else {\n      api.likeCard(card._id).then(newCard => setCards(state => state.map(item => item._id === card._id ? newCard : item))).catch(error => console.log(`Ошибка: ${error}`));\n    }\n  }\n  function changeCardDelete(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(item => item._id !== card._id));\n      closeAllPopups();\n    }).catch(error => console.log(`Ошибка: ${error}`)).finally(() => setIsLoading(false));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: setIsEditProfilePopupOpen,\n          onEditAvatar: setIsEditAvatarPopupOpen,\n          onAddPlace: setIsAddPlacePopupOpen,\n          onConfirmationPopup: setIsConfirmationPopupOpen,\n          onDeletedCard: setDeletedCard,\n          onCardClick: setSelectedCard,\n          onCardLike: changeCardLike,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          onAddPlace: changeAddPlaceSubmit,\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onLoading: isLoading,\n          onCloseOverlay: closeByOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          onUpdateAvatar: changeUpdateAvatar,\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onLoading: isLoading,\n          onCloseOverlay: closeByOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onUpdateUser: changeUpdateUser,\n          onClose: closeAllPopups,\n          onLoading: isLoading,\n          onCloseOverlay: closeByOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopupConfirmation, {\n          onClose: closeAllPopups,\n          isOpen: isConfirmationPopupOpen,\n          onCardDelete: changeCardDelete,\n          onLoading: isLoading,\n          card: deletedCard,\n          onCloseOverlay: closeByOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          onCloseOverlay: closeByOverlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Cqwseup4acaiJRKHyZYxXkwS+d4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","EditProfilePopup","EditAvatarPopup","AddPlacePopup","PopupConfirmation","ImagePopup","Footer","CurrentUserContext","api","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","deletedCard","setDeletedCard","selectedCard","setSelectedCard","getUserInfo","then","profile","catch","error","console","log","getInitialCards","data","map","card","_id","name","link","likes","owner","isOpen","closeByEscape","evt","key","closeAllPopups","document","addEventListener","removeEventListener","closeByOverlay","target","currentTarget","changeAddPlaceSubmit","addNewCard","newCard","finally","changeUpdateUser","newUserInfo","editUserInfo","changeUpdateAvatar","newAvatar","editUserPhoto","changeCardLike","isLiked","some","user","dislikeCard","state","item","likeCard","changeCardDelete","deleteCard","filter","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onEditAvatar","onAddPlace","onConfirmationPopup","onDeletedCard","onCardClick","onCardLike","onClose","onLoading","onCloseOverlay","onUpdateAvatar","onUpdateUser","onCardDelete","_c","$RefreshReg$"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/components/App.js"],"sourcesContent":["import React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport Header from \"./Header\"\nimport Main from \"./Main\"\nimport EditProfilePopup from \"./EditProfilePopup\"\nimport EditAvatarPopup from \"./EditAvatarPopup\"\nimport AddPlacePopup from \"./AddPlacePopup\"\nimport PopupConfirmation from \"./PopupConfirmation\"\nimport ImagePopup from \"./ImagePopup\"\nimport Footer from \"./Footer\"\nimport CurrentUserContext from \"../contexts/CurrentUserContext\"\nimport api from \"../utils/Api\"\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n    const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false)\n    const [currentUser, setCurrentUser] = useState({})\n    const [cards, setCards] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    const [deletedCard, setDeletedCard] = useState({})\n    const [selectedCard, setSelectedCard] = useState({})\n\n    useEffect(() => {\n        api\n            .getUserInfo()\n            .then((profile) => setCurrentUser(profile))\n            .catch((error) => console.log(`Ошибка: ${error}`))\n\n        api\n            .getInitialCards()\n            .then((data) => {\n                setCards(\n                    data.map((card) => ({\n                        _id: card._id,\n                        name: card.name,\n                        link: card.link,\n                        likes: card.likes,\n                        owner: card.owner,\n                    }))\n                )\n            })\n            .catch((error) => console.log(`Ошибка: ${error}`))\n    }, [])\n\n    const isOpen =\n        isEditAvatarPopupOpen ||\n        isEditProfilePopupOpen ||\n        isAddPlacePopupOpen ||\n        isConfirmationPopupOpen ||\n        selectedCard.link\n\n    useEffect(() => {\n        function closeByEscape(evt) {\n            if (evt.key === \"Escape\") {\n                closeAllPopups()\n            }\n        }\n        if (isOpen) {\n            document.addEventListener(\"keydown\", closeByEscape)\n            return () => {\n                document.removeEventListener(\"keydown\", closeByEscape)\n            }\n        }\n    }, [isOpen])\n\n    function closeByOverlay(evt) {\n        if (evt.target === evt.currentTarget) {\n            closeAllPopups()\n        }\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false)\n        setIsConfirmationPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setSelectedCard({})\n        setDeletedCard({})\n    }\n\n    function changeAddPlaceSubmit(data) {\n        setIsLoading(true)\n        api\n            .addNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards])\n\n                closeAllPopups()\n            })\n            .catch((error) => console.log(`Ошибка: ${error}`))\n            .finally(() => setIsLoading(false))\n    }\n\n    function changeUpdateUser(newUserInfo) {\n        setIsLoading(true)\n        api\n            .editUserInfo(newUserInfo)\n            .then((data) => {\n                setCurrentUser(data)\n                closeAllPopups()\n            })\n            .catch((error) => console.log(`Ошибка: ${error}`))\n            .finally(() => setIsLoading(false))\n    }\n\n    function changeUpdateAvatar(newAvatar) {\n        setIsLoading(true)\n        api\n            .editUserPhoto(newAvatar)\n            .then((data) => {\n                setCurrentUser(data)\n                closeAllPopups()\n            })\n            .catch((error) => console.log(`Ошибка: ${error}`))\n            .finally(() => setIsLoading(false))\n    }\n\n    function changeCardLike(card) {\n        const isLiked = card.likes.some((user) => user._id === currentUser._id)\n\n        if (isLiked) {\n            api\n                .dislikeCard(card._id)\n                .then((newCard) =>\n                    setCards((state) =>\n                        state.map((item) => (item._id === card._id ? newCard : item))\n                    )\n                )\n                .catch((error) => console.log(`Ошибка: ${error}`))\n        } else {\n            api\n                .likeCard(card._id)\n                .then((newCard) =>\n                    setCards((state) =>\n                        state.map((item) => (item._id === card._id ? newCard : item))\n                    )\n                )\n                .catch((error) => console.log(`Ошибка: ${error}`))\n        }\n    }\n\n    function changeCardDelete(card) {\n        setIsLoading(true)\n        api\n            .deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((item) => item._id !== card._id))\n                closeAllPopups()\n            })\n\n            .catch((error) => console.log(`Ошибка: ${error}`))\n            .finally(() => setIsLoading(false))\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"body\">\n                <div className=\"page\">\n                    <Header />\n                    <Main\n                        onEditProfile={setIsEditProfilePopupOpen}\n                        onEditAvatar={setIsEditAvatarPopupOpen}\n                        onAddPlace={setIsAddPlacePopupOpen}\n                        onConfirmationPopup={setIsConfirmationPopupOpen}\n                        onDeletedCard={setDeletedCard}\n                        onCardClick={setSelectedCard}\n                        onCardLike={changeCardLike}\n                        cards={cards}\n                    />\n                    <Footer />\n                    <AddPlacePopup\n                        onAddPlace={changeAddPlaceSubmit}\n                        isOpen={isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        onLoading={isLoading}\n                        onCloseOverlay={closeByOverlay}\n                    />\n\n                    <EditAvatarPopup\n                        onUpdateAvatar={changeUpdateAvatar}\n                        isOpen={isEditAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onLoading={isLoading}\n                        onCloseOverlay={closeByOverlay}\n                    />\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onUpdateUser={changeUpdateUser}\n                        onClose={closeAllPopups}\n                        onLoading={isLoading}\n                        onCloseOverlay={closeByOverlay}\n                    />\n\n                    <PopupConfirmation\n                        onClose={closeAllPopups}\n                        isOpen={isConfirmationPopupOpen}\n                        onCardDelete={changeCardDelete}\n                        onLoading={isLoading}\n                        card={deletedCard}\n                        onCloseOverlay={closeByOverlay}\n                    />\n\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                        onCloseOverlay={closeByOverlay}\n                    />\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}