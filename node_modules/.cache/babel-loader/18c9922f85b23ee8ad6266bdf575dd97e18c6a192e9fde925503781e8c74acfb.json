{"ast":null,"code":"var _jsxFileName = \"/Users/roman/Documents/\\u042F.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Projects/mesto-react/src/components/EditAvatarPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport useFormValidation from \"../hooks/useFormValidation\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAvatarPopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  const inputValue = useRef();\n  const {\n    values,\n    error,\n    isValid,\n    handleChange,\n    reset\n  } = useFormValidation();\n  function resetAfterClose() {\n    onClose();\n    reset();\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateAvatar({\n      avatar: inputValue.current.value\n    }, reset);\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup-avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    isValid: isValid,\n    isOpen: isOpen,\n    onClose: resetAfterClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputValue,\n      id: \"avatar\",\n      className: \"popup__input popup__input_type_avatar\",\n      name: \"avatar\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      required: \"\",\n      value: values.avatar ? values.avatar : \"\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"avatar-error\",\n      className: \"popup__error\",\n      children: error.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"riR9883oSozPIybvou5bgOH3LjM=\", false, function () {\n  return [useFormValidation];\n});\n_c = EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["useRef","useFormValidation","PopupWithForm","jsxDEV","_jsxDEV","EditAvatarPopup","_ref","_s","isOpen","onClose","onUpdateAvatar","inputValue","values","error","isValid","handleChange","reset","resetAfterClose","handleSubmit","event","preventDefault","avatar","current","value","name","title","onSubmit","children","ref","id","className","type","placeholder","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/components/EditAvatarPopup.jsx"],"sourcesContent":["import { useRef } from \"react\";\nimport useFormValidation from \"../hooks/useFormValidation\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const inputValue = useRef();\n  const { values, error, isValid, handleChange, reset } = useFormValidation();\n\n  function resetAfterClose() {\n    onClose();\n    reset();\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateAvatar({ avatar: inputValue.current.value }, reset);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"popup-avatar\"\n      title=\"Обновить аватар\"\n      isValid={isValid}\n      isOpen={isOpen}\n      onClose={resetAfterClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        ref={inputValue}\n        id=\"avatar\"\n        className=\"popup__input popup__input_type_avatar\"\n        name=\"avatar\"\n        type=\"url\"\n        placeholder=\"Ссылка на аватар\"\n        required=\"\"\n        value={values.avatar ? values.avatar : \"\"}\n        onChange={handleChange}\n      />\n      <span id=\"avatar-error\" className=\"popup__error\">\n        {error.avatar}\n      </span>\n    </PopupWithForm>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EACzE,MAAMK,UAAU,GAAGX,MAAM,CAAC,CAAC;EAC3B,MAAM;IAAEY,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGf,iBAAiB,CAAC,CAAC;EAE3E,SAASgB,eAAeA,CAAA,EAAG;IACzBR,OAAO,CAAC,CAAC;IACTO,KAAK,CAAC,CAAC;EACT;EAEA,SAASE,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBV,cAAc,CAAC;MAAEW,MAAM,EAAEV,UAAU,CAACW,OAAO,CAACC;IAAM,CAAC,EAAEP,KAAK,CAAC;EAC7D;EAEA,oBACEZ,OAAA,CAACF,aAAa;IACZsB,IAAI,EAAC,cAAc;IACnBC,KAAK,EAAC,uFAAiB;IACvBX,OAAO,EAAEA,OAAQ;IACjBN,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEQ,eAAgB;IACzBS,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAEvBvB,OAAA;MACEwB,GAAG,EAAEjB,UAAW;MAChBkB,EAAE,EAAC,QAAQ;MACXC,SAAS,EAAC,uCAAuC;MACjDN,IAAI,EAAC,QAAQ;MACbO,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,wFAAkB;MAC9BC,QAAQ,EAAC,EAAE;MACXV,KAAK,EAAEX,MAAM,CAACS,MAAM,GAAGT,MAAM,CAACS,MAAM,GAAG,EAAG;MAC1Ca,QAAQ,EAAEnB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFlC,OAAA;MAAMyB,EAAE,EAAC,cAAc;MAACC,SAAS,EAAC,cAAc;MAAAH,QAAA,EAC7Cd,KAAK,CAACQ;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB;AAAC/B,EAAA,CAvCuBF,eAAe;EAAA,QAEmBJ,iBAAiB;AAAA;AAAAsC,EAAA,GAFnDlC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}