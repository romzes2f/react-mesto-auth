{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _returnRes(res) {\n    return res.ok ? res.json() : Promise.reject;\n  }\n  getData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._returnRes);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._returnRes);\n  }\n  setUserData(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.info\n      })\n    }).then(this._returnRes);\n  }\n  setAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._returnRes);\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      })\n    }).then(this._returnRes);\n  }\n  addlike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._returnRes);\n  }\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._returnRes);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._returnRes);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: 'fb04fe28-7bc0-4cbf-bc40-2c92feffd1a0',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_authorization","authorization","_returnRes","res","ok","json","Promise","reject","getData","fetch","then","getInitialCards","setUserData","data","method","body","JSON","stringify","name","about","info","setAvatar","avatar","addNewCard","title","link","addlike","id","deleteLike","deleteCard","cardId","api"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n        this._authorization = options.headers.authorization;\n    }\n\n    _returnRes(res) { return res.ok ? res.json() : Promise.reject }\n\n    getData() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: {\n                authorization: this._authorization\n            }\n        })\n\n            .then(this._returnRes)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._returnRes)\n    }\n\n    setUserData(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.info\n            })\n        })\n            .then(this._returnRes)\n    }\n\n    setAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._returnRes)\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.title,\n                link: data.link\n            })\n        })\n            .then(this._returnRes)\n    }\n\n    addlike(id) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._returnRes)\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._returnRes)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._returnRes)\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n    headers: {\n        authorization: 'fb04fe28-7bc0-4cbf-bc40-2c92feffd1a0',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}