{"ast":null,"code":"class Api {\n  constructor(params) {\n    this.url = params.url;\n    this.headers = params.headers;\n  }\n  getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  getUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this.getResponse);\n  }\n  editUserInfo(item) {\n    return fetch(`${this.url}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about\n      })\n    }).then(this.getResponse);\n  }\n  editUserPhoto(item) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: item.avatar\n      })\n    }).then(this.getResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this.url}/cards`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this.getResponse);\n  }\n  addNewCard(item) {\n    return fetch(`${this.url}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: item.name,\n        link: item.link\n      })\n    }).then(this.getResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this.getResponse);\n  }\n  likeCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this.headers\n    }).then(this.getResponse);\n  }\n  dislikeCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this.getResponse);\n  }\n}\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"5e341264-ca7e-4fb2-b0c7-97939544a65a\",\n    \"content-type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","params","url","headers","getResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","editUserInfo","item","body","JSON","stringify","name","about","editUserPhoto","avatar","getInitialCards","addNewCard","link","deleteCard","cardId","likeCard","dislikeCard","api","authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(params) {\n        this.url = params.url\n        this.headers = params.headers\n    }\n\n    getResponse(res) {\n        if (res.ok) {\n            return res.json()\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`)\n        }\n    }\n\n    getUserInfo() {\n        return fetch(`${this.url}/users/me`, {\n            method: \"GET\",\n            headers: this.headers,\n        }).then(this.getResponse)\n    }\n\n    editUserInfo(item) {\n        return fetch(`${this.url}/users/me`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: JSON.stringify({\n                name: item.name,\n                about: item.about,\n            }),\n        }).then(this.getResponse)\n    }\n\n    editUserPhoto(item) {\n        return fetch(`${this.url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: item.avatar,\n            }),\n        }).then(this.getResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this.url}/cards`, {\n            method: \"GET\",\n            headers: this.headers,\n        }).then(this.getResponse)\n    }\n\n    addNewCard(item) {\n        return fetch(`${this.url}/cards`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify({\n                name: item.name,\n                link: item.link,\n            }),\n        }).then(this.getResponse)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.url}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n        }).then(this.getResponse)\n    }\n\n    likeCard(cardId) {\n        return fetch(`${this.url}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this.headers,\n        }).then(this.getResponse)\n    }\n\n    dislikeCard(cardId) {\n        return fetch(`${this.url}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this.headers,\n        }).then(this.getResponse)\n    }\n}\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n    headers: {\n        authorization: \"5e341264-ca7e-4fb2-b0c7-97939544a65a\",\n        \"content-type\": \"application/json\",\n    },\n})\n\nexport default api"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,GAAG,GAAGD,MAAM,CAACC,GAAG;IACrB,IAAI,CAACC,OAAO,GAAGF,MAAM,CAACE,OAAO;EACjC;EAEAC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAClD;EACJ;EAEAC,WAAWA,CAAA,EAAG;IACV,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,WAAU,EAAE;MACjCW,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAW,YAAYA,CAACC,IAAI,EAAE;IACf,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,WAAU,EAAE;MACjCW,MAAM,EAAE,OAAO;MACfV,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,KAAK,EAAEL,IAAI,CAACK;MAChB,CAAC;IACL,CAAC,CAAC,CAACP,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAkB,aAAaA,CAACN,IAAI,EAAE;IAChB,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,kBAAiB,EAAE;MACxCW,MAAM,EAAE,OAAO;MACfV,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBI,MAAM,EAAEP,IAAI,CAACO;MACjB,CAAC;IACL,CAAC,CAAC,CAACT,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAoB,eAAeA,CAAA,EAAG;IACd,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,QAAO,EAAE;MAC9BW,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAqB,UAAUA,CAACT,IAAI,EAAE;IACb,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,QAAO,EAAE;MAC9BW,MAAM,EAAE,MAAM;MACdV,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfM,IAAI,EAAEV,IAAI,CAACU;MACf,CAAC;IACL,CAAC,CAAC,CAACZ,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAuB,UAAUA,CAACC,MAAM,EAAE;IACf,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,UAAS0B,MAAO,EAAC,EAAE;MACxCf,MAAM,EAAE,QAAQ;MAChBV,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEAyB,QAAQA,CAACD,MAAM,EAAE;IACb,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,UAAS0B,MAAO,QAAO,EAAE;MAC9Cf,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;EAEA0B,WAAWA,CAACF,MAAM,EAAE;IAChB,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACV,GAAI,UAAS0B,MAAO,QAAO,EAAE;MAC9Cf,MAAM,EAAE,QAAQ;MAChBV,OAAO,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC,CAACW,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC;EAC7B;AACJ;AAEA,MAAM2B,GAAG,GAAG,IAAIhC,GAAG,CAAC;EAChBG,GAAG,EAAE,6CAA6C;EAClDC,OAAO,EAAE;IACL6B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}