{"ast":null,"code":"class Api {\n  constructor(baseUrl, headers) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return Promise.reject(`Ошибка ${response.status}`);\n    }\n  }\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  addCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.title,\n        link: card.link\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  editUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(response => {\n      return this._getResponseData(response);\n    });\n  }\n  getInitialInfo() {\n    return Promise.all([this.getUserInfo(), this.getCards()]);\n  }\n}\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-65', {\n  authorization: 'b15bc02e-ae06-46a3-b490-b1ce7ba85320',\n  \"content-type\": 'application/json; charset=UTF-8'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_getResponseData","response","ok","json","Promise","reject","status","getCards","fetch","then","addCard","card","method","body","JSON","stringify","name","title","link","getUserInfo","editUserInfo","about","deleteCard","cardId","addLike","deleteLike","editAvatar","data","avatar","getInitialInfo","all","api","authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["\nclass Api {\n    constructor (baseUrl, headers) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _getResponseData (response) {\n        if(response.ok) {\n            return response.json()\n        } else {\n            return Promise.reject(`Ошибка ${response.status}`)\n        }\n    }\n\n    getCards () {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    addCard(card){\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: card.title,\n                link: card.link\n            })\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    getUserInfo() {\n        return fetch (`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then((response) => {\n            return this._getResponseData(response);\n        })\n    }\n\n    editUserInfo(name, about) {\n        return fetch (`${this._baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n            })\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch (`${this._baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    addLike (cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"PUT\",\n            headers: this._headers\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    deleteLike (cardId) {\n        return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    editAvatar (data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n        .then(response => {\n            return this._getResponseData(response);\n        })\n    }\n\n    getInitialInfo() {\n        return Promise.all([this.getUserInfo(), this.getCards()]);\n    }\n}\n\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-65', {authorization: 'b15bc02e-ae06-46a3-b490-b1ce7ba85320', \"content-type\": 'application/json; charset=UTF-8'});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}