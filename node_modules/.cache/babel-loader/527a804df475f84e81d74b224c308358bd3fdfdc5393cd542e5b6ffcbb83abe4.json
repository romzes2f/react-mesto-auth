{"ast":null,"code":"var BASE_URL=\"https://auth.nomoreparties.co\";function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\".concat(res.status));}export var registerUser=function registerUser(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var loginUser=function loginUser(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(checkResponse).then(function(data){if(data.token){localStorage.setItem(\"jwt\",data.token);return data;}});};export var checkToken=function checkToken(jwt){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(jwt)}}).then(checkResponse);};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","registerUser","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","loginUser","data","token","localStorage","setItem","checkToken","jwt","Authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"https://auth.nomoreparties.co\"\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json()\n  }\n  return Promise.reject(`${res.status}`)\n}\n\nexport const registerUser = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(checkResponse)\n}\n\nexport const loginUser = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  })\n    .then(checkResponse)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token)\n        return data\n      }\n    })\n}\n\nexport const checkToken = (jwt) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n    },\n  }).then(checkResponse)\n}\n"],"mappings":"AAAA,GAAM,CAAAA,QAAQ,CAAG,+BAA+B,CAEhD,QAAS,CAAAC,aAAaA,CAACC,GAAG,CAAE,CAC1B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,IAAAC,MAAA,CAAIL,GAAG,CAACM,MAAM,CAAE,CAAC,CACxC,CAEA,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC/C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBR,KAAK,CAAEA,KAAK,CACZC,QAAQ,CAAEA,QACZ,CAAC,CACH,CAAC,CAAC,CAACQ,IAAI,CAAClB,aAAa,CAAC,CACxB,CAAC,CAED,MAAO,IAAM,CAAAmB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIV,KAAK,CAAEC,QAAQ,CAAK,CAC5C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBR,KAAK,CAAEA,KAAK,CACZC,QAAQ,CAAEA,QACZ,CAAC,CACH,CAAC,CAAC,CACCQ,IAAI,CAAClB,aAAa,CAAC,CACnBkB,IAAI,CAAC,SAACE,IAAI,CAAK,CACd,GAAIA,IAAI,CAACC,KAAK,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEH,IAAI,CAACC,KAAK,CAAC,CACvC,MAAO,CAAAD,IAAI,CACb,CACF,CAAC,CAAC,CACN,CAAC,CAED,MAAO,IAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,GAAG,CAAK,CACjC,MAAO,CAAAd,KAAK,IAAAL,MAAA,CAAIP,QAAQ,cAAa,CACnCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCa,aAAa,WAAApB,MAAA,CAAYmB,GAAG,CAC9B,CACF,CAAC,CAAC,CAACP,IAAI,CAAClB,aAAa,CAAC,CACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}