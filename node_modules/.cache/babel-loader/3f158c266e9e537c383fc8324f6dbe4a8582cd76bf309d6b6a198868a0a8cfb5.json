{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: '9b1777f3-98dd-4967-afba-6faae59432d3',\n    'content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getCards","addNewCard","data","method","body","JSON","stringify","name","title","link","deleteCard","cardId","getCardLike","deleteCardLike","changeAvatar","avatar","changeUserInfo","about","api","authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      }),\n    }).then((res) =>\n      this._checkResponse(res)\n    );\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  deleteCardLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      }),\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  changeUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      }),\n    }).then((res) => this._checkResponse(res)\n    );\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: '9b1777f3-98dd-4967-afba-6faae59432d3',\n    'content-type': 'application/json'\n  },\n});\n\nexport default api;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}