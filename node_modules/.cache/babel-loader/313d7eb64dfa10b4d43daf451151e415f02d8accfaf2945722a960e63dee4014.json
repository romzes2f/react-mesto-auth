{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._getResponseData);\n  }\n  getInitialCards() {\n    return this._request(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    });\n  }\n  getUserInfo() {\n    return this._request(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    });\n  }\n  changeUserInfo(name, about) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n  }\n  addNewCard(title, link) {\n    return this._request(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._request(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers\n      });\n    } else {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: this._headers\n      });\n    }\n  }\n  changeUserAvatar(link) {\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n  }\n}\nexport default Api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"f9a58eab-d2de-4166-9a66-6bc6595d2d82\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponseData","res","ok","Promise","reject","status","json","_request","url","fetch","then","getInitialCards","getUserInfo","changeUserInfo","name","about","method","body","JSON","stringify","addNewCard","title","link","deleteCard","cardId","changeLikeCardStatus","isLiked","changeUserAvatar","avatar","authorization"],"sources":["/Users/roman/Documents/Я.Практикум/Projects/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  _request(url, options) {\n    return fetch(url, options).then(this._getResponseData);\n  }\n\n  getInitialCards() {\n    return this._request(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    });\n  }\n\n  getUserInfo() {\n    return this._request(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    });\n  }\n\n  changeUserInfo(name, about) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    });\n  }\n\n  addNewCard(title, link) {\n    return this._request(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link,\n      }),\n    });\n  }\n\n  deleteCard(cardId) {\n    return this._request(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      });\n    } else {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: this._headers,\n      });\n    }\n  }\n\n  changeUserAvatar(link) {\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link,\n      }),\n    });\n  }\n}\n\nexport default Api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"f9a58eab-d2de-4166-9a66-6bc6595d2d82\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}